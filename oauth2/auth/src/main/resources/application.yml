server:
  port: 8083

logging:
  pattern:
    console: "%-5level | %-25.25logger{25} | %msg%n"

#
#spring.output.ansi.enabled: always
#
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-id: admin-client
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret: "{bcrypt}$2a$10$M70MdRFJBDviz8nO.xfAweX18lDdB7Z/XcWuXSDjsnv2ZadD6Ufxi"
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods: client_secret_basic
#spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types: client_credentials
#spring.security.oauth2.authorizationserver.client.client-1.registration.scopes: user.read,user.write
#
#logging.level.org.springframework.security: trace
#spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live: 120s